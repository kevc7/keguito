// src/app/app.component.ts
import { Component, ViewChild, ElementRef } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';
import { trigger, transition, style, animate } from '@angular/animations';

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [CommonModule],
  template: `
    <div class="starry-background">
      <div class="container">
        <div class="letter">
          <p>Mi amor,</p>
          
          <p>Son las 7 de la ma√±ana, un 17 de marzo, y no s√© si la brisa que acaricia la ventana es el preludio de algo m√°s, o si es el susurro t√≠mido de tus palabras que resuenan en mi mente mientras el d√≠a apenas comienza. Me siento emocionado, como un ni√±o que espera su regalo m√°s preciado. En unos d√≠as te ver√©, y cuento los segundos como si se tratara de una eternidad. Mi mente, que a veces parece perderse entre las sombras del tiempo, solo sabe que te pertenece, que sigue el ritmo de tus pasos aunque a veces parezca callada.</p>
          
          <p>Hace ya m√°s de un mes que no te escribo cartas, pero no creas que este silencio ha sido vac√≠o. No es que no te piense, ni que tu imagen se haya desvanecido en mis pensamientos. Al contrario, cada rinc√≥n de mi ser te lleva dentro, como si fueras la luna en mi noche m√°s oscura. Pensar que te ped√≠ ser parte de tu vida, que te ped√≠ ser tu novio, me llena de una calidez extra√±a, porque siento que eso es solo el principio de algo mucho m√°s grande. Te amo tanto, que la idea de seguir trabajando en nosotros me motiva, me impulsa, me da fuerzas para ser la mejor versi√≥n de mi mismo, para que este amor, este sue√±o que estamos creando, siga floreciendo.</p>
          
          <p>Te amo, Kadley, con todo lo que soy. Con todo lo que s√© y con todo lo que har√©. Mi amor por ti no tiene l√≠mites, y cada vez que te pienso, que te imagino, que te siento cerca, me doy cuenta de que en este viaje que compartimos, no hay final, solo infinitos comienzos.</p>
          <p>remember: Por favor, est√© o no est√© a tu lado nunca dejes de creer en tus capacidades y que puedes 
            lograr todo lo que te propongas, eres un ni√±a muy capaz y 
            siempre creer√© en ti, le ruego al universo por que me permita 
            estar mucho tiempo a tu lado para seguirte viendo crecer y ponerme 
            feliz a tu lado por cada uno de tus logros cumplidos.</p>
            
            <p>-kevin</p>
        </div>

        <div class="slider-container">
          <div class="slider" [style.transform]="'translateX(-' + (currentSlide * 100) + '%)'">
            <div *ngFor="let image of images" class="slide">
              <img [src]="image" alt="Imagen de amor">
            </div>
          </div>
          <div class="slider-controls">
            <button (click)="prevSlide()" class="slider-button">‚ùÆ</button>
            <button (click)="nextSlide()" class="slider-button">‚ùØ</button>
          </div>
          <div class="slider-dots">
            <span *ngFor="let image of images; let i = index" 
                  [class.active]="i === currentSlide"
                  (click)="goToSlide(i)"></span>
          </div>
        </div>
        
        <div class="music-controls">
          <div class="song-controls" *ngIf="isPlaying">
            <button class="song-nav-button" (click)="prevSong()">
              ‚óÑ‚óÑ
            </button>
            <span class="song-indicator">Canci√≥n {{ currentSongIndex + 1 }}</span>
            <button class="song-nav-button" (click)="nextSong()">
              ‚ñ∫‚ñ∫
            </button>
          </div>

          <button class="play-button" (click)="toggleMusic()" [class.playing]="isPlaying">
            <span *ngIf="!isPlaying">‚ô• Play ‚ô•</span>
            <span *ngIf="isPlaying">‚ô• Pause ‚ô•</span>
          </button>
          
          <div class="volume-control" *ngIf="isPlaying">
            <input 
              type="range" 
              min="0" 
              max="100" 
              [value]="volume" 
              (input)="adjustVolume($event)"
              class="volume-slider"
            >
            <span class="volume-label">üîä {{ volume }}%</span>
          </div>
        </div>
        
        <div class="music-container" *ngIf="isPlaying">
          <iframe 
            #youtubePlayer
            [src]="currentSongUrl" 
            frameborder="0" 
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
            allowfullscreen>
          </iframe>
        </div>
      </div>
    </div>
  `,
  styles: [`
    .starry-background {
      background-color: black;
      background-image: radial-gradient(white, rgba(255,255,255,.2) 2px, transparent 3px);
      background-size: 50px 50px;
      background-position: 0 0, 25px 25px;
      min-height: 100vh;
      width: 100%;
      overflow: hidden;
      position: relative;
    }
    
    .container {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      padding: 20px;
      position: relative;
      z-index: 1;
    }
    
    .letter {
      font-family: "Times New Roman", Times, serif;
      max-width: 800px;
      line-height: 1.6;
      text-align: justify;
      margin-bottom: 30px;
      padding: 30px;
      background-color: rgba(0, 0, 0, 0.7);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
      color: white;
      border-radius: 8px;
      backdrop-filter: blur(3px);
    }

    .slider-container {
      width: 100%;
      max-width: 800px;
      margin: 20px 0;
      position: relative;
      overflow: hidden;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
    }

    .slider {
      display: flex;
      transition: transform 0.5s ease-in-out;
      height: 400px;
      width: 100%;
      background-color: rgba(0, 0, 0, 0.5);
    }

    .slide {
      min-width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
      padding: 10px;
    }

    .slide img {
      max-width: 100%;
      max-height: 100%;
      width: auto;
      height: auto;
      object-fit: contain;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    }

    .slider-controls {
      position: absolute;
      top: 50%;
      width: 100%;
      transform: translateY(-50%);
      display: flex;
      justify-content: space-between;
      padding: 0 10px;
      pointer-events: none;
    }

    .slider-button {
      background: rgba(255, 255, 255, 0.3);
      border: none;
      color: white;
      padding: 15px;
      cursor: pointer;
      border-radius: 50%;
      font-size: 18px;
      transition: background 0.3s ease;
      pointer-events: auto;
    }

    .slider-button:hover {
      background: rgba(255, 255, 255, 0.5);
    }

    .slider-dots {
      position: absolute;
      bottom: 10px;
      left: 50%;
      transform: translateX(-50%);
      display: flex;
      gap: 8px;
    }

    .slider-dots span {
      width: 10px;
      height: 10px;
      background: rgba(255, 255, 255, 0.5);
      border-radius: 50%;
      cursor: pointer;
      transition: background 0.3s ease;
    }

    .slider-dots span.active {
      background: white;
    }
    
    .music-controls {
      position: fixed;
      top: 20px;
      left: 20px;
      transform: none;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 8px;
      z-index: 10;
      background-color: rgba(0, 0, 0, 0.7);
      padding: 12px;
      border-radius: 15px;
      backdrop-filter: blur(5px);
      min-width: 200px;
    }

    .song-controls {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-bottom: 5px;
      width: 100%;
      justify-content: space-between;
    }

    .song-nav-button {
      background-color: rgba(255, 105, 180, 0.3);
      color: white;
      border: none;
      border-radius: 50%;
      width: 30px;
      height: 30px;
      font-size: 12px;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 0;
    }

    .song-nav-button:hover {
      background-color: rgba(255, 20, 147, 0.5);
      transform: scale(1.1);
    }

    .song-indicator {
      color: white;
      font-size: 13px;
      text-align: center;
    }

    .play-button {
      background-color: #FF69B4;
      color: white;
      border: none;
      border-radius: 25px;
      padding: 8px 20px;
      font-size: 16px;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
      width: 100%;
    }
    
    .play-button:hover {
      background-color: #FF1493;
      transform: scale(1.05);
    }
    
    .play-button.playing {
      background-color: #FF1493;
    }
    
    .music-container {
      width: 1px;
      height: 1px;
      overflow: hidden;
      position: fixed;
      bottom: 0;
      right: 0;
    }
    
    iframe {
      width: 300px;
      height: 200px;
    }

    .volume-control {
      display: flex;
      align-items: center;
      gap: 8px;
      width: 100%;
    }

    .volume-slider {
      -webkit-appearance: none;
      flex: 1;
      height: 4px;
      border-radius: 2px;
      background: #ffffff50;
      outline: none;
      cursor: pointer;
    }

    .volume-slider::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 12px;
      height: 12px;
      border-radius: 50%;
      background: #FF69B4;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .volume-label {
      color: white;
      font-size: 12px;
      min-width: 45px;
    }
  `]
})
export class AppComponent {
  @ViewChild('youtubePlayer') youtubePlayer!: ElementRef;
  currentSongUrl!: SafeResourceUrl;
  isPlaying = false;
  volume = 50;
  currentSongIndex = 0;
  currentSlide = 0;

  songs = [
    'rkI034qKG7o', // Canci√≥n original
    'Sl0-Y1cHFBI', // Nueva canci√≥n 1
    'muTUmQnqGDY'  // Nueva canci√≥n 2
  ];

  images = [
    'assets/imagenes/img7.jpeg',
    'assets/imagenes/img8.jpeg',
    'assets/imagenes/img9.jpeg',
    'assets/imagenes/img1.jpeg',
    'assets/imagenes/img2.jpeg',
    'assets/imagenes/img4.jpeg',
    'assets/imagenes/img5.jpeg',
    'assets/imagenes/img6.jpeg',
    'assets/imagenes/img10.jpeg'
  ];
  
  constructor(private sanitizer: DomSanitizer) {
    this.updateCurrentSong();
  }

  updateCurrentSong() {
    const videoId = this.songs[this.currentSongIndex];
    const embedUrl = `https://www.youtube.com/embed/${videoId}?autoplay=1&enablejsapi=1`;
    this.currentSongUrl = this.sanitizer.bypassSecurityTrustResourceUrl(embedUrl);
  }

  changeSong(index: number) {
    this.currentSongIndex = index;
    this.updateCurrentSong();
  }

  adjustVolume(event: any) {
    this.volume = event.target.value;
    const iframe = this.youtubePlayer.nativeElement;
    iframe.contentWindow.postMessage(JSON.stringify({
      event: 'command',
      func: 'setVolume',
      args: [this.volume]
    }), '*');
  }
  
  toggleMusic() {
    this.isPlaying = !this.isPlaying;
  }

  nextSlide() {
    this.currentSlide = (this.currentSlide + 1) % this.images.length;
  }

  prevSlide() {
    this.currentSlide = (this.currentSlide - 1 + this.images.length) % this.images.length;
  }

  goToSlide(index: number) {
    this.currentSlide = index;
  }

  nextSong() {
    this.currentSongIndex = (this.currentSongIndex + 1) % this.songs.length;
    this.updateCurrentSong();
  }

  prevSong() {
    this.currentSongIndex = (this.currentSongIndex - 1 + this.songs.length) % this.songs.length;
    this.updateCurrentSong();
  }
}